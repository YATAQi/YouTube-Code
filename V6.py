from manim import *

class V6(Scene):
    def construct(self):

        txt = MathTex(r"\text{Utah Math Olympiad").scale(2)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"\textit{(2016 P2)}").scale(2)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        onesix = MathTex(r"1 + 6 = 7 = 4 +3").scale(2.4)
        self.play(Write(onesix))
        self.wait(5)
        self.play(Unwrite(onesix))

        txt2 = MathTex(r"4 1 2 1").scale(2.4)
        self.play(Write(txt2))
        self.wait(3)
        self.play(Unwrite(txt2))

class Sample(Scene):
    def construct(self):

        txt = MathTex(r"\text{Sample Space: } S_4").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"S_1 = \{ 1, 2, 3, 4, 5, 6 \}").scale(2.4)
        txt1 = MathTex(r"|S_1| = 6").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txt1))
        self.wait(3)
        self.play(Unwrite(txt))


        txt1 = MathTex(r"S_2 = \{ (1,1), (1,2), (1,3), (1,4), (1,5), (1,6),\}").scale(1.4)
        txt1b = MathTex(r"|S_2| = 36 = 6^2").scale(2.4)
        txt2 = MathTex(r"(2,1), (2,2), (2,3), (2,4), (2,5), (2,6),").scale(1.4)
        txt3 = MathTex(r"(3,1), (3,2), (3,3), (3,4), (3,5), (3,6),").scale(1.4)
        txt4 = MathTex(r"(4,1), (4,2), (4,3), (4,4), (4,5), (4,6),").scale(1.4)
        txt5 = MathTex(r"(5,1), (5,2), (5,3), (5,4), (5,5), (5,6),").scale(1.4)
        txt6 = MathTex(r"(6,1), (6,2), (6,3), (6,4), (6,5), (6,6)\}").scale(1.4)
        self.play(Write(txt1))
        self.wait(3)
        self.play(Unwrite(txt1))
        self.play(Write(txt2))
        self.wait(3)
        self.play(Unwrite(txt2))
        self.play(Write(txt3))
        self.wait(3)
        self.play(Unwrite(txt3))
        self.play(Write(txt4))
        self.wait(3)
        self.play(Transform(txt4,txt1b))
        self.wait(3)
        self.play(Unwrite(txt4))
        self.play(Write(txt5))
        self.wait(3)
        self.play(Unwrite(txt5))
        self.play(Write(txt6))
        self.wait(3)
        self.play(Unwrite(txt6))

        txt = MathTex(r"|S_4| = 6^4").scale(2.4)
        txt1b = MathTex(r"|S_4| = 1296").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txt1b))
        self.wait(3)
        self.play(Unwrite(txt))

class manually(Scene):
    def construct(self):

        txt1 = MathTex(r"(1,1,1,1)").scale(2.8)
        txt1b = MathTex(r"1 + 1 = 1 + 1").scale(2.4)
        txt2 = MathTex(r"(2,4,3,4)").scale(2.8)
        txt3 = MathTex(r"(6,3,2,5)").scale(2.8)
        txt3b = MathTex(r"6 + 2 = 3 + 5").scale(2.4)
        txt4 = MathTex(r"(4,5,1,3)").scale(2.8)

        self.play(Write(txt1))
        self.wait(3)
        self.play(Unwrite(txt1))
        self.play(Write(txt1b))
        self.wait(3)
        self.play(Unwrite(txt1b))
        self.play(Write(txt2))
        self.wait(3)
        self.play(Unwrite(txt2))
        self.play(Write(txt3))
        self.wait(3)
        self.play(Unwrite(txt3))
        self.play(Write(txt3b))
        self.wait(3)
        self.play(Unwrite(txt3b))
        self.play(Write(txt4))
        self.wait(3)
        self.play(Unwrite(txt4))

class partition(Scene):
    def construct(self):

        txt1 = MathTex(r"(1,1,1,1)").scale(2.4)
        txt2 = MathTex(r"(2,2,2,2)").scale(2.4)
        txt3 = MathTex(r"(3,3,3,3)").scale(2.4)
        txt4 = MathTex(r"(4,4,4,4)").scale(2.4)
        txt5 = MathTex(r"(5,5,5,5)").scale(2.4)
        txt6 = MathTex(r"(6,6,6,6)").scale(2.4)
        txt7 = MathTex(r"(1,1,4,4)").scale(2.4)
        txt8 = MathTex(r"(2,3,3,2)").scale(2.4)
        txt9 = MathTex(r"(6,6,4,4)").scale(2.4)
        txt10 = MathTex(r"(4,4,5,5)").scale(2.4)
        txt11 = MathTex(r"(6,5,5,6)").scale(2.4)
        txt12 = MathTex(r"(3,3,1,1)").scale(2.4)
        txt13 = MathTex(r"(2,2,5,2)").scale(2.4)
        txt14 = MathTex(r"(1,4,1,1)").scale(2.4)
        txt15 = MathTex(r"(4,4,2,4)").scale(2.4)
        txt16 = MathTex(r"(5,5,5,1)").scale(2.4)
        txt17 = MathTex(r"(3,6,6,6)").scale(2.4)
        txt18 = MathTex(r"(3,3,3,4)").scale(2.4)
        txt19 = MathTex(r"(2,2,3,5)").scale(2.4)
        txt20 = MathTex(r"(4,1,1,6)").scale(2.4)
        txt21 = MathTex(r"(6,4,6,3)").scale(2.4)
        txt22 = MathTex(r"(2,1,4,4)").scale(2.4)
        txt23 = MathTex(r"(5,5,6,2)").scale(2.4)
        txt24 = MathTex(r"(3,6,1,3)").scale(2.4)
        txt25 = MathTex(r"(6,1,4,3)").scale(2.4)
        txt26 = MathTex(r"(3,2,5,1)").scale(2.4)
        txt27 = MathTex(r"(4,3,1,2)").scale(2.4)
        txt28 = MathTex(r"(2,1,6,5)").scale(2.4)
        txt29 = MathTex(r"(3,4,5,2)").scale(2.4)
        txt30 = MathTex(r"(6,4,2,1)").scale(2.4)

        self.add(txt1)
        self.wait(3)
        self.remove(txt1)
        self.add(txt2)
        self.wait(3)
        self.remove(txt2)
        self.add(txt3)
        self.wait(3)
        self.remove(txt3)
        self.add(txt4)
        self.wait(3)
        self.remove(txt4)
        self.add(txt5)
        self.wait(3)
        self.remove(txt5)
        self.add(txt6)
        self.wait(3)
        self.remove(txt6)
        self.add(txt7)
        self.wait(3)
        self.remove(txt7)
        self.add(txt8)
        self.wait(3)
        self.remove(txt8)
        self.add(txt9)
        self.wait(3)
        self.remove(txt9)
        self.add(txt10)
        self.wait(3)
        self.remove(txt10)
        self.add(txt11)
        self.wait(3)
        self.remove(txt11)
        self.add(txt12)
        self.wait(3)
        self.remove(txt12)
        self.add(txt13)
        self.wait(3)
        self.remove(txt13)
        self.add(txt14)
        self.wait(3)
        self.remove(txt14)
        self.add(txt15)
        self.wait(3)
        self.remove(txt15)
        self.add(txt16)
        self.wait(3)
        self.remove(txt16)
        self.add(txt17)
        self.wait(3)
        self.remove(txt17)
        self.add(txt18)
        self.wait(3)
        self.remove(txt18)
        self.add(txt19)
        self.wait(3)
        self.remove(txt19)
        self.add(txt20)
        self.wait(3)
        self.remove(txt20)
        self.add(txt21)
        self.wait(3)
        self.remove(txt21)
        self.add(txt22)
        self.wait(3)
        self.remove(txt22)
        self.add(txt23)
        self.wait(3)
        self.remove(txt23)
        self.add(txt24)
        self.wait(3)
        self.remove(txt24)
        self.add(txt25)
        self.wait(3)
        self.remove(txt25)
        self.add(txt26)
        self.wait(3)
        self.remove(txt26)
        self.add(txt27)
        self.wait(3)
        self.remove(txt27)
        self.add(txt28)
        self.wait(3)
        self.remove(txt28)
        self.add(txt29)
        self.wait(3)
        self.remove(txt29)
        self.add(txt30)
        self.wait(3)
        self.remove(txt30)

class distinct(Scene):
    def construct(self):

        txt = MathTex(r"1 \leq a,b,c,d \leq 6").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt1 = MathTex(r"\text{1. } (a,a,a,a)").scale(2.4)
        self.play(Write(txt1))
        self.wait(5)
        self.play(Unwrite(txt1))

        txt2 = MathTex(r"\text{2. } (a,a,a,b)").scale(2.4)
        self.play(Write(txt2))
        self.wait(5)
        self.play(Unwrite(txt2))

        txt3 = MathTex(r"\text{3. } (a,a,b,b)").scale(2.4)
        self.play(Write(txt3))
        self.wait(5)
        self.play(Unwrite(txt3))

        txt4 = MathTex(r"\text{4. } (a,a,b,c)").scale(2.4)
        self.play(Write(txt4))
        self.wait(5)
        self.play(Unwrite(txt4))

        txt5 = MathTex(r"\text{5. } (a,b,c,d)").scale(2.4)
        self.play(Write(txt5))
        self.wait(5)
        self.play(Unwrite(txt5))

class combperm(Scene):
    def construct(self):

        txt1 = MathTex(r"\text{Combinations}").scale(2.4)
        txt2 = MathTex(r"\text{Permutations}").scale(2.4)

        self.play(Write(txt1))
        self.wait(3)
        self.play(Unwrite(txt1))
        self.play(Write(txt2))
        self.wait(3)
        self.play(Unwrite(txt2))

        txt1 = MathTex(r"(2,4,4,5)").scale(2.4)
        txt2 = MathTex(r"(5,4,4,2)").scale(2.4)
        txt3 = MathTex(r"\neq").scale(2.4)
        txt4 = MathTex(r"(a,a,b,c)").scale(2.4)

        self.play(Write(txt1))
        self.wait(3)
        self.play(Unwrite(txt1))
        self.play(Write(txt2))
        self.wait(3)
        self.play(Unwrite(txt2))
        self.play(Write(txt3))
        self.wait(3)
        self.play(Unwrite(txt3))
        self.play(Write(txt4))
        self.wait(3)
        self.play(Unwrite(txt4))

class case1(Scene):
    def construct(self):

        txt1 = MathTex(r"(1,1,1,1)").scale(2.4)
        self.play(Write(txt1))
        self.wait(5)
        self.play(Unwrite(txt1))
        
        txt1 = MathTex(r"(2,2,2,2)").scale(2.4)
        self.play(Write(txt1))
        self.wait(5)
        self.play(Unwrite(txt1))

        txt1 = MathTex(r"(3,3,3,3)").scale(2.4)
        self.play(Write(txt1))
        self.wait(5)
        self.play(Unwrite(txt1))

        txt1 = MathTex(r"(4,4,4,4)").scale(2.4)
        self.play(Write(txt1))
        self.wait(5)
        self.play(Unwrite(txt1))

        txt1 = MathTex(r"(5,5,5,5)").scale(2.4)
        self.play(Write(txt1))
        self.wait(5)
        self.play(Unwrite(txt1))

        txt1 = MathTex(r"(6,6,6,6)").scale(2.4)
        self.play(Write(txt1))
        self.wait(5)
        self.play(Unwrite(txt1))

        eqn = MathTex(r"5 + 5 = 5+5").scale(2.4)
        self.play(Write(eqn))
        self.wait(5)
        self.play(Unwrite(eqn))

        txt = MathTex(r"6").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

class case2(Scene):
    def construct(self):

        txt = MathTex(r"a + a \neq a + b").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"0").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

class case3(Scene):
    def construct(self):

        txt = MathTex(r"a + a \neq b + b").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"a + b = a + b").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt1 = MathTex(r"(a,a,b,b)").scale(2.4)
        txt2 = MathTex(r"(a,b,a,b)").scale(2.4)
        txt3 = MathTex(r"(a,b,b,a)").scale(2.4)
        txt4 = MathTex(r"(b,a,a,b)").scale(2.4)
        txt5 = MathTex(r"(b,a,b,a)").scale(2.4)
        txt6 = MathTex(r"(b,b,a,a)").scale(2.4)
        self.play(Write(txt1))
        self.wait(1)
        self.play(Transform(txt1,txt2))
        self.wait(1)
        self.play(Transform(txt1,txt3))
        self.wait(1)
        self.play(Transform(txt1,txt4))
        self.wait(1)
        self.play(Transform(txt1,txt5))
        self.wait(1)
        self.play(Transform(txt1,txt6))
        self.wait(1)
        self.play(Unwrite(txt1))

        eqn1 = MathTex(r"\binom{4}{2}").scale(1.8)
        eqn2 = MathTex(r"6").scale(3.2)
        txt = MathTex(r"6 \text{ ways to permute}").scale(2.4)
        self.play(Write(eqn1))
        self.wait(2)
        self.play(Transform(eqn1,eqn2))
        self.wait(2)
        self.play(Unwrite(eqn1))
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        eqn1 = MathTex(r"\binom{6}{2}").scale(1.8)
        eqn2 = MathTex(r"15").scale(3.2)
        txt = MathTex(r"15 \text{ ways to select } a \text{ and } b").scale(2.4)
        self.play(Write(eqn1))
        self.wait(2)
        self.play(Transform(eqn1,eqn2))
        self.wait(2)
        self.play(Unwrite(eqn1))
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"\{1,2,3,4,5,6\}").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"6 \times 15").scale(2.4)
        txt2 = MathTex(r"90").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txt2))
        self.wait(5)
        self.play(Unwrite(txt))

class case4(Scene):
    def construct(self):

        txt = MathTex(r"a + b \neq a + c").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"b \neq c \text{ } \to \text{ } a + b \neq a + c").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"a + a").scale(2.4)
        txt2 = MathTex(r"2a").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txt2))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"b+c").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"2a = b+c").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"2a").scale(2.4)
        txtb = MathTex(r"2(1)").scale(2.4)
        txtc = MathTex(r"2").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Transform(txt,txtc))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"2a").scale(2.4)
        txtb = MathTex(r"2(2)").scale(2.4)
        txtc = MathTex(r"4").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Transform(txt,txtc))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"2a").scale(2.4)
        txtb = MathTex(r"2(3)").scale(2.4)
        txtc = MathTex(r"6").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Transform(txt,txtc))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"2a").scale(2.4)
        txtb = MathTex(r"2(4)").scale(2.4)
        txtc = MathTex(r"8").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Transform(txt,txtc))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"2a").scale(2.4)
        txtb = MathTex(r"2(5)").scale(2.4)
        txtc = MathTex(r"10").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Transform(txt,txtc))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"2a").scale(2.4)
        txtb = MathTex(r"2(6)").scale(2.4)
        txtc = MathTex(r"12").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Transform(txt,txtc))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"b+c").scale(2.4)
        txtb = MathTex(r"1+3").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"b+c").scale(2.4)
        txtb = MathTex(r"2+4").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"= 1+5").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"b+c").scale(2.4)
        txtb = MathTex(r"3+5").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"= 2+6").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"b+c").scale(2.4)
        txtb = MathTex(r"4+6").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(5)
        self.play(Unwrite(txt))

        txt = MathTex(r"b<c").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"(2,2,1,3)").scale(2.4)
        txtb = MathTex(r"(2,3,1,2)").scale(2.4)
        txtc = MathTex(r"(3,1,2,2)").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Transform(txt,txtc))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"(3,3,2,4)").scale(2.4)
        txtb = MathTex(r"(3,3,4,2)").scale(2.4)
        txtc = MathTex(r"(3,2,4,3)").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Transform(txt,txtc))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"(3,3,1,5)").scale(2.4)
        txtb = MathTex(r"(5,3,1,3)").scale(2.4)
        txtc = MathTex(r"(3,1,3,5)").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Transform(txt,txtc))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"(4,4,3,5)").scale(2.4)
        txtb = MathTex(r"(3,5,4,4)").scale(2.4)
        txtc = MathTex(r"(5,3,4,4)").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Transform(txt,txtc))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"(4,4,2,6)").scale(2.4)
        txtb = MathTex(r"(4,6,2,4)").scale(2.4)
        txtc = MathTex(r"(6,2,4,4)").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Transform(txt,txtc))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"(5,5,4,6)").scale(2.4)
        txtb = MathTex(r"(6,5,4,5)").scale(2.4)
        txtc = MathTex(r"(6,4,5,5)").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(3)  
        self.play(Transform(txt,txtc))
        self.wait(3)
        self.play(Unwrite(txt)) 

        txt = MathTex(r"(a,a,b,c)").scale(2.4)
        txtb = MathTex(r"(a,c,b,a)").scale(2.4)
        txtc = MathTex(r"(b,a,c,a)").scale(2.4)
        txtd = MathTex(r"(a,a,b,c)").scale(2.4)
        txte = MathTex(r"(a,a,b,c)").scale(2.4)
        txtf = MathTex(r"(a,a,b,c)").scale(2.4)
        self.play(Write(txt))
        self.wait(5)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Transform(txt,txtc))
        self.wait(3)
        self.play(Transform(txt,txtd))
        self.wait(3)
        self.play(Transform(txt,txte))
        self.wait(3)
        self.play(Transform(txt,txtf))
        self.wait(3)
        self.play(Unwrite(txt))  

        txt = MathTex(r"\frac{4!}{2!}").scale(2.4)
        txtb = MathTex(r"12").scale(2.4) 
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"12 \text{ ways to permute}").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"6 \times 12").scale(2.4)
        txtb = MathTex(r"72").scale(2.4) 
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Unwrite(txt))

class case5(Scene):
    def construct(self):

        txt = MathTex(r"a+b = c+d").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt1 = MathTex(r"a+b").scale(2.4)
        txt1b = MathTex(r"a+d").scale(2.4)
        txt1c = MathTex(r"b+d").scale(2.4)
        self.play(Write(txt1))
        self.wait(3)
        self.play(Transform(txt1,txt1b))
        self.wait(3)
        self.play(Transform(txt1,txt1c))
        self.wait(3)
        self.play(Unwrite(txt1))

        txt2 = MathTex(r"c+d").scale(2.4)
        txt2b = MathTex(r"c+b").scale(2.4)
        txt2c = MathTex(r"c+a").scale(2.4)
        self.play(Write(txt2))
        self.wait(3)
        self.play(Transform(txt2,txt2b))
        self.wait(3)
        self.play(Transform(txt2,txt2c))
        self.wait(3)
        self.play(Unwrite(txt2))

        nmbr = MathTex(r"1").scale(2.4)
        self.add(nmbr)
        self.wait(1)
        self.remove(nmbr)
        nmbr = MathTex(r"2").scale(2.4)
        self.add(nmbr)
        self.wait(1)
        self.remove(nmbr)
        nmbr = MathTex(r"3").scale(2.4)
        self.add(nmbr)
        self.wait(1)
        self.remove(nmbr)
        nmbr = MathTex(r"4").scale(2.4)
        self.add(nmbr)
        self.wait(1)
        self.remove(nmbr)
        nmbr = MathTex(r"5").scale(2.4)
        self.add(nmbr)
        self.wait(1)
        self.remove(nmbr)
        nmbr = MathTex(r"6").scale(2.4)
        self.add(nmbr)
        self.wait(1)
        self.remove(nmbr)

        txt = MathTex(r"3 = 1+2").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"4 = 1+3").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"5 = 1+4 = 2+3").scale(2.4)
        txtb = MathTex(r"a=1,b=4, c=2, d=3").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"6 = 1+5 = 2+4").scale(2.4)
        txtb = MathTex(r"a=1,b=5, c=2, d=4").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"7 = 1+6 = 2+5 = 3+4").scale(2.4)
        txtb = MathTex(r"7 = 1+6 = 3+4").scale(2.4)
        txtc = MathTex(r"a=1, b=6, c=3, d=4").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Transform(txt,txtc))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"7 = 1+6 = 2+5").scale(2.4)
        txtb = MathTex(r"a=1, b=6, c=2, d=5").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"7 = 2+5 = 3+4").scale(2.4)
        txtb = MathTex(r"a=2, b=5, c=3, d=4").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"8 = 2+6 = 3+5").scale(2.4)
        txtb = MathTex(r"a=2, b=6, c=3, d=5").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"9 = 3+6 = 4+5").scale(2.4)
        txtb = MathTex(r"a=3,b=6, c=4, d=5").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"10 = 4+6").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"11 = 5+6").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

class case5SevenSP(Scene):
    def construct(self):

        txt = MathTex(r"(a,b,c,d)").scale(2.4)
        txtb = MathTex(r"(a,c,b,d)").scale(2.4)
        txtc = MathTex(r"(d,c,b,a)").scale(2.4)
        txtd = MathTex(r"(a,b,c,d)").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(1)
        self.play(Transform(txt,txtc))
        self.wait(1)
        self.play(Transform(txt,txtd))
        self.wait(1)
        self.play(Unwrite(txt))
        
        txt = MathTex(r"(1,4,2,3)").scale(2.4)
        txtb = MathTex(r"(1,2,4,3)").scale(2.4)
        txtc = MathTex(r"(3,2,4,1)").scale(2.4)
        txtd = MathTex(r"(1,4,2,3)").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(1)
        self.play(Transform(txt,txtc))
        self.wait(1)
        self.play(Transform(txt,txtd))
        self.wait(1)
        self.play(Unwrite(txt))

        txt = MathTex(r"(1,5,2,4)").scale(2.4)
        txtb = MathTex(r"(1,2,5,4)").scale(2.4)
        txtc = MathTex(r"(4,2,5,1)").scale(2.4)
        txtd = MathTex(r"(1,5,2,4)").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(1)
        self.play(Transform(txt,txtc))
        self.wait(1)
        self.play(Transform(txt,txtd))
        self.wait(1)
        self.play(Unwrite(txt))

        txt = MathTex(r"(1,6,3,4)").scale(2.4)
        txtb = MathTex(r"(1,3,6,4)").scale(2.4)
        txtc = MathTex(r"(4,3,6,1)").scale(2.4)
        txtd = MathTex(r"(1,6,3,4)").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(1)
        self.play(Transform(txt,txtc))
        self.wait(1)
        self.play(Transform(txt,txtd))
        self.wait(1)
        self.play(Unwrite(txt))

        txt = MathTex(r"(1,6,2,5)").scale(2.4)
        txtb = MathTex(r"(1,2,6,5)").scale(2.4)
        txtc = MathTex(r"(5,2,6,1)").scale(2.4)
        txtd = MathTex(r"(1,6,2,5)").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(1)
        self.play(Transform(txt,txtc))
        self.wait(1)
        self.play(Transform(txt,txtd))
        self.wait(1)
        self.play(Unwrite(txt))

        txt = MathTex(r"(2,5,3,4)").scale(2.4)
        txtb = MathTex(r"(2,3,5,4)").scale(2.4)
        txtc = MathTex(r"(4,3,5,2)").scale(2.4)
        txtd = MathTex(r"(2,5,3,4)").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(1)
        self.play(Transform(txt,txtc))
        self.wait(1)
        self.play(Transform(txt,txtd))
        self.wait(1)
        self.play(Unwrite(txt))

        txt = MathTex(r"(2,6,3,5)").scale(2.4)
        txtb = MathTex(r"(2,3,6,5)").scale(2.4)
        txtc = MathTex(r"(5,3,6,2)").scale(2.4)
        txtd = MathTex(r"(2,6,3,5)").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(1)
        self.play(Transform(txt,txtc))
        self.wait(1)
        self.play(Transform(txt,txtd))
        self.wait(1)
        self.play(Unwrite(txt))

        txt = MathTex(r"(3,6,4,5)").scale(2.4)
        txtb = MathTex(r"(3,4,6,5)").scale(2.4)
        txtc = MathTex(r"(5,4,6,3)").scale(2.4)
        txtd = MathTex(r"(3,6,4,5)").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Transform(txt,txtb))
        self.wait(1)
        self.play(Transform(txt,txtc))
        self.wait(1)
        self.play(Transform(txt,txtd))
        self.wait(1)
        self.play(Unwrite(txt))

        eqn = MathTex(r"4!").scale(2.4)
        eqn2 = MathTex(r"24").scale(2.4)
        eqn3 = MathTex(r"7 \times 24").scale(2.4)
        eqn4 = MathTex(r"168").scale(2.4)

        self.play(Write(eqn))
        self.wait(3)
        self.play(Transform(eqn,eqn2))
        self.wait(3)
        self.play(Unwrite(eqn))

        self.play(Write(eqn3))
        self.wait(3)
        self.play(Transform(eqn3,eqn4))
        self.wait(3)
        self.play(Unwrite(eqn3))

class final(Scene):
    def construct(self):

        eqn = MathTex(r"6+0+90+72+168").scale(2.4)
        eqn2 = MathTex(r"336").scale(3.4)
        eqn3 = MathTex(r"\frac{336}{1296}").scale(3)
        eqn4 = MathTex(r"\frac{7}{27}").scale(3)

        self.play(Write(eqn))
        self.wait(3)
        self.play(Transform(eqn,eqn2))
        self.wait(3)
        self.play(Transform(eqn,eqn3))
        self.wait(3)
        self.play(Transform(eqn,eqn4))
        self.wait(3)
        self.play(Unwrite(eqn))

        txt = MathTex(r"\text{Let } a,b,c,d \in \{1,2,3,4,5,6\}").scale(2)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"\text{I. } a+b=c+d").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"\text{II. } a+c=b+d").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"\text{III. } a+d=b+c").scale(2.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

        txt = MathTex(r"\text{We want the probability of ``I or II or III''.}").scale(1.4)
        self.play(Write(txt))
        self.wait(3)
        self.play(Unwrite(txt))

class problem(Scene):
    def construct(self):

        txt1 = MathTex(r"\text{Four fair six-sided dice are rolled.}").scale(1.2)
        txt2 = MathTex(r"\text{What is the probability that they can be divided}").scale(1.2)
        txt3 = MathTex(r"\text{into two pairs which sum to the same value?}").scale(1.2)

        self.add(txt1)
        self.wait(3)
        self.remove(txt1)
        self.add(txt2)
        self.wait(3)
        self.remove(txt2)
        self.add(txt3)
        self.wait(3)
        self.remove(txt3)